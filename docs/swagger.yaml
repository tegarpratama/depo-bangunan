basePath: /api
definitions:
  models.Order:
    properties:
      created_at:
        type: string
      id:
        type: integer
      order_number:
        type: string
      product:
        $ref: '#/definitions/models.Product'
      product_id:
        type: integer
      qty:
        type: integer
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
    type: object
  models.OrderNumberRes:
    properties:
      order_number:
        type: string
    type: object
  models.Product:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
      updated_at:
        type: string
    type: object
  models.SwaggerCreateOrderRes:
    properties:
      data:
        $ref: '#/definitions/models.OrderNumberRes'
      status:
        example: ok
        type: string
    type: object
  models.SwaggerCreateProduct:
    properties:
      name:
        type: string
      price:
        type: integer
    type: object
  models.SwaggerDeleteOrderRes:
    properties:
      status:
        example: ok
        type: string
    type: object
  models.SwaggerDeleteProductRes:
    properties:
      status:
        example: ok
        type: string
    type: object
  models.SwaggerDeleteUserRes:
    properties:
      status:
        example: ok
        type: string
    type: object
  models.SwaggerDetailOrderRes:
    properties:
      data:
        $ref: '#/definitions/models.Order'
      status:
        example: ok
        type: string
    type: object
  models.SwaggerErrorRes:
    properties:
      message:
        type: string
      status:
        example: error
        type: string
    type: object
  models.SwaggerLoginRes:
    properties:
      data:
        $ref: '#/definitions/models.UserLoggedIn'
      status:
        example: ok
        type: string
    type: object
  models.SwaggerOrderRes:
    properties:
      current_page:
        type: integer
      data:
        $ref: '#/definitions/models.OrderNumberRes'
      status:
        example: ok
        type: string
      total_data:
        type: integer
      total_page:
        type: integer
    type: object
  models.SwaggerProductRes:
    properties:
      data:
        $ref: '#/definitions/models.Product'
      status:
        example: ok
        type: string
    type: object
  models.SwaggerProductsRes:
    properties:
      current_page:
        type: integer
      data:
        $ref: '#/definitions/models.Product'
      status:
        example: ok
        type: string
      total_data:
        type: integer
      total_page:
        type: integer
    type: object
  models.SwaggerRegisterRes:
    properties:
      data:
        $ref: '#/definitions/models.User'
      status:
        example: ok
        type: string
    type: object
  models.SwaggerUpdateOrderRes:
    properties:
      data:
        $ref: '#/definitions/models.UpdatedOrder'
      status:
        example: ok
        type: string
    type: object
  models.SwaggerUserRes:
    properties:
      current_page:
        type: integer
      data:
        $ref: '#/definitions/models.User'
      status:
        example: ok
        type: string
      total_data:
        type: integer
      total_page:
        type: integer
    type: object
  models.UpdatedOrder:
    properties:
      order_number:
        type: string
      product_id:
        type: string
      qty:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      role:
        type: string
      updated_at:
        type: string
    type: object
  models.UserLoggedIn:
    properties:
      email:
        type: string
      id:
        type: integer
      role:
        type: string
      token:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerLoginRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwaggerErrorRes'
      summary: Login
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user by providing name, email, and password
      parameters:
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: password
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: password_confirm
        in: body
        name: password_confirm
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerRegisterRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwaggerErrorRes'
      summary: Create a new user
      tags:
      - Authentication
  /customers:
    get:
      consumes:
      - application/json
      description: Get All Customers
      parameters:
      - description: move page
        in: query
        name: page
        type: string
      - description: limit data
        in: query
        name: limit
        type: string
      - description: search data
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerUserRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwaggerErrorRes'
      summary: Get All Customers
      tags:
      - Customers
    post:
      consumes:
      - application/json
      description: Create new customer
      parameters:
      - description: name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: email
        in: body
        name: email
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerRegisterRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwaggerErrorRes'
      summary: Create Customer
      tags:
      - Customers
  /customers/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete Custtomer
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerDeleteUserRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwaggerErrorRes'
      summary: Delete Custtomer
      tags:
      - Customers
  /customers/{id}/detail:
    get:
      consumes:
      - application/json
      description: Get Detail Customer
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerRegisterRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwaggerErrorRes'
      summary: Get Detail Customer
      tags:
      - Customers
  /customers/{id}/update:
    put:
      consumes:
      - application/json
      description: Update Customer
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: email
        in: body
        name: email
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerRegisterRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwaggerErrorRes'
      summary: Update Customer
      tags:
      - Customers
  /orders:
    get:
      consumes:
      - application/json
      description: Get all orders
      parameters:
      - description: move page
        in: query
        name: page
        type: string
      - description: limit data
        in: query
        name: limit
        type: string
      - description: search data
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerOrderRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwaggerErrorRes'
      summary: Get all orders
      tags:
      - Orders
    post:
      consumes:
      - application/json
      description: Create Order
      parameters:
      - description: product_id
        in: path
        name: product_id
        required: true
        type: string
      - description: qty
        in: path
        name: qty
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerCreateOrderRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwaggerErrorRes'
      summary: Create Order
      tags:
      - Orders
  /orders/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete Order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerDeleteOrderRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwaggerErrorRes'
      summary: Delete Order
      tags:
      - Orders
  /orders/{id}/detail:
    get:
      consumes:
      - application/json
      description: Get Detail Order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerDetailOrderRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwaggerErrorRes'
      summary: Get Detail Order
      tags:
      - Orders
  /orders/{id}/update:
    put:
      consumes:
      - application/json
      description: Update Order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerUpdateOrderRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwaggerErrorRes'
      summary: Update Order
      tags:
      - Orders
  /products:
    get:
      consumes:
      - application/json
      description: Get Products
      parameters:
      - description: move page
        in: query
        name: page
        type: string
      - description: limit data
        in: query
        name: limit
        type: string
      - description: search data
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerProductsRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwaggerErrorRes'
      summary: Get Products
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Create Product
      parameters:
      - description: name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: price
        in: body
        name: price
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerProductRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwaggerErrorRes'
      summary: Create Product
      tags:
      - Products
  /products/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete Products
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerDeleteProductRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwaggerErrorRes'
      summary: Delete Products
      tags:
      - Products
  /products/{id}/update:
    put:
      consumes:
      - application/json
      description: Update Products
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: price
        in: body
        name: price
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerCreateProduct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SwaggerErrorRes'
      summary: Update Products
      tags:
      - Products
swagger: "2.0"
